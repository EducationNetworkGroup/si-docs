"use strict";(self.webpackChunkscience_island_docs=self.webpackChunkscience_island_docs||[]).push([[8484],{8453:(e,n,i)=>{i.d(n,{R:()=>c,x:()=>r});var s=i(6540);const o={},t=s.createContext(o);function c(e){const n=s.useContext(t);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:c(e.components),s.createElement(t.Provider,{value:n},e.children)}},9530:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>r,default:()=>u,frontMatter:()=>c,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"project-management/coding-conventions/code-reviews","title":"Code Review Guidelines","description":"Best practices for conducting effective code reviews.","source":"@site/docs/04-project-management/01-coding-conventions/05-code-reviews.md","sourceDirName":"04-project-management/01-coding-conventions","slug":"/project-management/coding-conventions/code-reviews","permalink":"/si-docs/project-management/coding-conventions/code-reviews","draft":false,"unlisted":false,"editUrl":"https://github.com/EducationNetworkGroup/si-docs/tree/main/docs/04-project-management/01-coding-conventions/05-code-reviews.md","tags":[],"version":"current","sidebarPosition":5,"frontMatter":{"sidebar_position":5,"description":"Best practices for conducting effective code reviews."},"sidebar":"tutorialSidebar","previous":{"title":"Pull Requests","permalink":"/si-docs/project-management/coding-conventions/pull-requests"},"next":{"title":"Testing Conventions","permalink":"/si-docs/project-management/coding-conventions/testing"}}');var o=i(4848),t=i(8453);const c={sidebar_position:5,description:"Best practices for conducting effective code reviews."},r="Code Review Guidelines",l={},d=[{value:"Review Principles",id:"review-principles",level:2},{value:"What to Look For",id:"what-to-look-for",level:2},{value:"Code Quality",id:"code-quality",level:3},{value:"Security",id:"security",level:3},{value:"Testing",id:"testing",level:3},{value:"Review Checklist",id:"review-checklist",level:2}];function a(e){const n={h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"code-review-guidelines",children:"Code Review Guidelines"})}),"\n",(0,o.jsx)(n.h2,{id:"review-principles",children:"Review Principles"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Be Constructive:"})," Focus on improving the code, not criticizing the author"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Timely Responses:"})," Aim to review within 24 hours of submission"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Context Matters:"})," Consider the scope and urgency of changes"]}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"what-to-look-for",children:"What to Look For"}),"\n",(0,o.jsx)(n.h3,{id:"code-quality",children:"Code Quality"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Follows established coding patterns"}),"\n",(0,o.jsx)(n.li,{children:"No unnecessary complexity"}),"\n",(0,o.jsx)(n.li,{children:"Proper error handling"}),"\n",(0,o.jsx)(n.li,{children:"Code is modular and reusable"}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"security",children:"Security"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Input validation implemented"}),"\n",(0,o.jsx)(n.li,{children:"No hardcoded secrets"}),"\n",(0,o.jsx)(n.li,{children:"Principle of least privilege followed"}),"\n",(0,o.jsx)(n.li,{children:"Secure data handling"}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"testing",children:"Testing"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Tests cover new functionality"}),"\n",(0,o.jsx)(n.li,{children:"Edge cases considered"}),"\n",(0,o.jsx)(n.li,{children:"Test names are descriptive"}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"review-checklist",children:"Review Checklist"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Code follows project conventions"}),"\n",(0,o.jsx)(n.li,{children:"No obvious bugs or issues"}),"\n",(0,o.jsx)(n.li,{children:"Documentation updated if needed"}),"\n",(0,o.jsx)(n.li,{children:"Performance considered for large changes"}),"\n",(0,o.jsx)(n.li,{children:"All comments addressed from previous reviews"}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(a,{...e})}):a(e)}}}]);