"use strict";(self.webpackChunkscience_island_docs=self.webpackChunkscience_island_docs||[]).push([[5571],{2785:(n,e,i)=>{i.r(e),i.d(e,{assets:()=>a,contentTitle:()=>c,default:()=>h,frontMatter:()=>o,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"guides/coding-conventions/branching","title":"Branching","description":"All branching within the project must adhere to the following requirements:","source":"@site/docs/03-guides/04-coding-conventions/02-branching.md","sourceDirName":"03-guides/04-coding-conventions","slug":"/guides/coding-conventions/branching","permalink":"/si-docs/guides/coding-conventions/branching","draft":false,"unlisted":false,"editUrl":"https://github.com/EducationNetworkGroup/si-docs/tree/main/docs/03-guides/04-coding-conventions/02-branching.md","tags":[],"version":"current","lastUpdatedBy":"MatthewLeigh","lastUpdatedAt":1743735266000,"sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"tutorialSidebar","previous":{"title":"The Basics","permalink":"/si-docs/guides/coding-conventions/the-basics"},"next":{"title":"Commits","permalink":"/si-docs/guides/coding-conventions/commits"}}');var t=i(4848),r=i(8453);const o={sidebar_position:2},c="Branching",a={},d=[];function l(n){const e={h1:"h1",header:"header",li:"li",p:"p",strong:"strong",ul:"ul",...(0,r.R)(),...n.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.header,{children:(0,t.jsx)(e.h1,{id:"branching",children:"Branching"})}),"\n",(0,t.jsx)(e.p,{children:"All branching within the project must adhere to the following requirements:"}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsx)(e.li,{children:"Use Kebab Case for branch names (e.g., add-authentication)."}),"\n",(0,t.jsx)(e.li,{children:"Only use alphanumeric characters in branch names."}),"\n",(0,t.jsx)(e.li,{children:"Branch names should either be the same as the task name, or clearly indicate the task being worked on."}),"\n",(0,t.jsx)(e.li,{children:"Depending on how tasks end up being divvied up, we may prepend one of the following titles with a forward slash (/) to the branch name to further specify its purpose:"}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:"[Top level task name/title]:"})," If sub tasks are being given to different team members","\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:"feature:"})," For new functionality"]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:"bugfix:"})," For fixing issues"]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:"refactor:"})," For code improvements"]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:"docs:"})," For documentation updates"]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:"test:"})," For test related changes"]}),"\n"]}),"\n"]}),"\n"]})]})}function h(n={}){const{wrapper:e}={...(0,r.R)(),...n.components};return e?(0,t.jsx)(e,{...n,children:(0,t.jsx)(l,{...n})}):l(n)}},8453:(n,e,i)=>{i.d(e,{R:()=>o,x:()=>c});var s=i(6540);const t={},r=s.createContext(t);function o(n){const e=s.useContext(r);return s.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function c(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(t):n.components||t:o(n.components),s.createElement(r.Provider,{value:e},n.children)}}}]);